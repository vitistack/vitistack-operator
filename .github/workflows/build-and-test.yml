name: Build and Test

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read
  packages: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}:@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}:@github.com/".insteadOf "git@github.com:"
        env:
          PRIVATE_REPO_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Install dependencies
        run: |
          go mod download
        env:
          GOPRIVATE: github.com/vitistack/*
          GOPROXY: direct

      - name: Build
        run: |
          VERSION="${{ github.ref_type == 'tag' && github.ref_name || '0.0.0' }}"
          VERSION="${VERSION#v*}"
          echo "Version $VERSION"
          make build
          touch cmd/isbuilt

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: bin/
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}:@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}:@github.com/".insteadOf "git@github.com:"
        env:
          PRIVATE_REPO_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: bin/
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: |
          go mod download
        env:
          GOPRIVATE: github.com/vitistack/*
          GOPROXY: direct

      - name: Setup test environment
        run: |
          make test

      - name: Run tests
        run: |
          make test-coverage
          go tool cover -func=coverage.out

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}:@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{ secrets.PRIVATE_REPO_TOKEN }}:@github.com/".insteadOf "git@github.com:"
        env:
          PRIVATE_REPO_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Install dependencies
        run: |
          go mod download
        env:
          GOPRIVATE: github.com/vitistack/*
          GOPROXY: direct

      - name: Run security scan
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
        env:
          GOPRIVATE: github.com/vitistack/*
